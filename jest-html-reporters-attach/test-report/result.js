window.jest_html_reporters_callback__({"numFailedTestSuites":8,"numFailedTests":27,"numPassedTestSuites":0,"numPassedTests":3,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":8,"numTotalTests":30,"startTime":1736755920719,"success":false,"testResults":[{"numFailingTests":1,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1736755921073,"runtime":332,"slow":false,"start":1736755920741},"testFilePath":"/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/01.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mgetIncompleteTodos 테스트 › 완료되지 않은 할 일만 반환\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    \u001b[32m- Expected  - 0\u001b[39m\n    \u001b[31m+ Received  + 5\u001b[39m\n\n    \u001b[33m@@ -3,10 +3,15 @@\u001b[39m\n    \u001b[2m      \"completed\": false,\u001b[22m\n    \u001b[2m      \"id\": 1,\u001b[22m\n    \u001b[2m      \"title\": \"잠자기\",\u001b[22m\n    \u001b[2m    },\u001b[22m\n    \u001b[2m    Object {\u001b[22m\n    \u001b[31m+     \"completed\": true,\u001b[39m\n    \u001b[31m+     \"id\": 2,\u001b[39m\n    \u001b[31m+     \"title\": \"밥먹기\",\u001b[39m\n    \u001b[31m+   },\u001b[39m\n    \u001b[31m+   Object {\u001b[39m\n    \u001b[2m      \"completed\": false,\u001b[22m\n    \u001b[2m      \"id\": 3,\u001b[22m\n    \u001b[2m      \"title\": \"코딩하기\",\u001b[22m\n    \u001b[2m    },\u001b[22m\n    \u001b[2m  ]\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 15 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m getIncompleteTodos(todos)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 16 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m       { id\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m title\u001b[33m:\u001b[39m \u001b[32m\"잠자기\"\u001b[39m\u001b[33m,\u001b[39m completed\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m       { id\u001b[33m:\u001b[39m \u001b[35m3\u001b[39m\u001b[33m,\u001b[39m title\u001b[33m:\u001b[39m \u001b[32m\"코딩하기\"\u001b[39m\u001b[33m,\u001b[39m completed\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m     ])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/01.test.js\u001b[39m\u001b[0m\u001b[2m:16:20)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["getIncompleteTodos 테스트"],"duration":2,"failureMessages":[],"fullName":"getIncompleteTodos 테스트 필터를 사용하는지 확인","status":"passed","title":"필터를 사용하는지 확인"},{"ancestorTitles":["getIncompleteTodos 테스트"],"duration":3,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n\u001b[32m- Expected  - 0\u001b[39m\n\u001b[31m+ Received  + 5\u001b[39m\n\n\u001b[33m@@ -3,10 +3,15 @@\u001b[39m\n\u001b[2m      \"completed\": false,\u001b[22m\n\u001b[2m      \"id\": 1,\u001b[22m\n\u001b[2m      \"title\": \"잠자기\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m    Object {\u001b[22m\n\u001b[31m+     \"completed\": true,\u001b[39m\n\u001b[31m+     \"id\": 2,\u001b[39m\n\u001b[31m+     \"title\": \"밥먹기\",\u001b[39m\n\u001b[31m+   },\u001b[39m\n\u001b[31m+   Object {\u001b[39m\n\u001b[2m      \"completed\": false,\u001b[22m\n\u001b[2m      \"id\": 3,\u001b[22m\n\u001b[2m      \"title\": \"코딩하기\",\u001b[22m\n\u001b[2m    },\u001b[22m\n\u001b[2m  ]\u001b[22m\n    at Object.toEqual (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/01.test.js:16:20)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"getIncompleteTodos 테스트 완료되지 않은 할 일만 반환","status":"failed","title":"완료되지 않은 할 일만 반환"}]},{"numFailingTests":4,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1736755921179,"runtime":96,"slow":false,"start":1736755921083},"testFilePath":"/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/05.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mfilterUserTodos 테스트 › map 메서드를 사용하는지 확인\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  8 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m  9 |\u001b[39m   it(\u001b[32m\"map 메서드를 사용하는지 확인\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 10 |\u001b[39m     expect(filterUserTodos\u001b[33m.\u001b[39mtoString()\u001b[33m.\u001b[39mincludes(\u001b[32m\"map\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 11 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m   it(\u001b[32m\"조건에 맞는 title만 배열로 반환\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/05.test.js\u001b[39m\u001b[0m\u001b[2m:10:56)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mfilterUserTodos 테스트 › 조건에 맞는 title만 배열로 반환\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[\"운동하기\"]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m filterUserTodos(userTodos\u001b[33m,\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"low\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 26 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([\u001b[32m\"운동하기\"\u001b[39m])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m   it(\u001b[32m\"조건에 맞는 항목이 없으면 빈 배열 반환\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/05.test.js\u001b[39m\u001b[0m\u001b[2m:26:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mfilterUserTodos 테스트 › 조건에 맞는 항목이 없으면 빈 배열 반환\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 39 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 40 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m filterUserTodos(userTodos\u001b[33m,\u001b[39m \u001b[35m999\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"high\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 41 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 43 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m   it(\u001b[32m\"새로운 배열의 길이는 기존 배열보다 작거나 같아야 함\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/05.test.js\u001b[39m\u001b[0m\u001b[2m:41:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mfilterUserTodos 테스트 › 새로운 배열의 길이는 기존 배열보다 작거나 같아야 함\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 55 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 56 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m filterUserTodos(userTodos\u001b[33m,\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"high\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 57 |\u001b[39m     expect(result\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeLessThanOrEqual(userTodos\u001b[33m.\u001b[39mlength)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 58 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 59 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 60 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.length (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/05.test.js\u001b[39m\u001b[0m\u001b[2m:57:19)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["filterUserTodos 테스트"],"duration":1,"failureMessages":[],"fullName":"filterUserTodos 테스트 filter 메서드를 사용하는지 확인","status":"passed","title":"filter 메서드를 사용하는지 확인"},{"ancestorTitles":["filterUserTodos 테스트"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/05.test.js:10:56)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"filterUserTodos 테스트 map 메서드를 사용하는지 확인","status":"failed","title":"map 메서드를 사용하는지 확인"},{"ancestorTitles":["filterUserTodos 테스트"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[\"운동하기\"]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/05.test.js:26:20)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"filterUserTodos 테스트 조건에 맞는 title만 배열로 반환","status":"failed","title":"조건에 맞는 title만 배열로 반환"},{"ancestorTitles":["filterUserTodos 테스트"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/05.test.js:41:20)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"filterUserTodos 테스트 조건에 맞는 항목이 없으면 빈 배열 반환","status":"failed","title":"조건에 맞는 항목이 없으면 빈 배열 반환"},{"ancestorTitles":["filterUserTodos 테스트"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'length')\n    at Object.length (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/05.test.js:57:19)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"filterUserTodos 테스트 새로운 배열의 길이는 기존 배열보다 작거나 같아야 함","status":"failed","title":"새로운 배열의 길이는 기존 배열보다 작거나 같아야 함"}]},{"numFailingTests":4,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1736755921256,"runtime":75,"slow":false,"start":1736755921181},"testFilePath":"/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/07.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mfilterTodosByKeyword 테스트 › fetch 함수를 사용하는지 확인\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 4 |\u001b[39m describe(\u001b[32m\"filterTodosByKeyword 테스트\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 5 |\u001b[39m   it(\u001b[32m\"fetch 함수를 사용하는지 확인\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 6 |\u001b[39m     expect(filterTodosByKeyword\u001b[33m.\u001b[39mtoString()\u001b[33m.\u001b[39mincludes(\u001b[32m\"fetch\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                               \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 9 |\u001b[39m   it(\u001b[32m\"keyword가 포함된 title만 필터링하여 반환\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/07.test.js\u001b[39m\u001b[0m\u001b[2m:6:63)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mfilterTodosByKeyword 테스트 › keyword가 포함된 title만 필터링하여 반환\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[{\"id\": 1, \"title\": \"Hello World\"}, {\"id\": 3, \"title\": \"hello kitty\"}]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 18 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m filterTodosByKeyword(\u001b[32m\"hello\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 20 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m       { id\u001b[33m:\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m title\u001b[33m:\u001b[39m \u001b[32m\"Hello World\"\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m       { id\u001b[33m:\u001b[39m \u001b[35m3\u001b[39m\u001b[33m,\u001b[39m title\u001b[33m:\u001b[39m \u001b[32m\"hello kitty\"\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m     ])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/07.test.js\u001b[39m\u001b[0m\u001b[2m:20:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mfilterTodosByKeyword 테스트 › keyword와 일치하는 항목이 없으면 빈 배열 반환\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 35 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m filterTodosByKeyword(\u001b[32m\"xyz\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 36 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 38 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 39 |\u001b[39m   it(\u001b[32m\"fetch 함수를 한 번만 호출\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/07.test.js\u001b[39m\u001b[0m\u001b[2m:36:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mfilterTodosByKeyword 테스트 › fetch 함수를 한 번만 호출\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected number of calls: \u001b[32m1\u001b[39m\n    Received number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 44 |\u001b[39m     \u001b[36mawait\u001b[39m filterTodosByKeyword(\u001b[32m\"hello\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 45 |\u001b[39m     expect(global\u001b[33m.\u001b[39mfetch)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 46 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 48 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledTimes (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/07.test.js\u001b[39m\u001b[0m\u001b[2m:45:26)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["filterTodosByKeyword 테스트"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/07.test.js:6:63)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"filterTodosByKeyword 테스트 fetch 함수를 사용하는지 확인","status":"failed","title":"fetch 함수를 사용하는지 확인"},{"ancestorTitles":["filterTodosByKeyword 테스트"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"id\": 1, \"title\": \"Hello World\"}, {\"id\": 3, \"title\": \"hello kitty\"}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/07.test.js:20:20)"],"fullName":"filterTodosByKeyword 테스트 keyword가 포함된 title만 필터링하여 반환","status":"failed","title":"keyword가 포함된 title만 필터링하여 반환"},{"ancestorTitles":["filterTodosByKeyword 테스트"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/07.test.js:36:20)"],"fullName":"filterTodosByKeyword 테스트 keyword와 일치하는 항목이 없으면 빈 배열 반환","status":"failed","title":"keyword와 일치하는 항목이 없으면 빈 배열 반환"},{"ancestorTitles":["filterTodosByKeyword 테스트"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m1\u001b[39m\nReceived number of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledTimes (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/07.test.js:45:26)"],"fullName":"filterTodosByKeyword 테스트 fetch 함수를 한 번만 호출","status":"failed","title":"fetch 함수를 한 번만 호출"}]},{"numFailingTests":4,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1736755921335,"runtime":76,"slow":false,"start":1736755921259},"testFilePath":"/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/08.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mextractNames 테스트 › fetch 함수를 사용하는지 확인\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 4 |\u001b[39m describe(\u001b[32m\"extractNames 테스트\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 5 |\u001b[39m   it(\u001b[32m\"fetch 함수를 사용하는지 확인\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 6 |\u001b[39m     expect(extractNames\u001b[33m.\u001b[39mtoString()\u001b[33m.\u001b[39mincludes(\u001b[32m\"fetch\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 9 |\u001b[39m   it(\u001b[32m\"records 내부의 name 값을 배열로 반환\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/08.test.js\u001b[39m\u001b[0m\u001b[2m:6:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mextractNames 테스트 › records 내부의 name 값을 배열로 반환\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[\"A\", \"B\"]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 22 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m extractNames(\u001b[32m\"http://fakeurl.com\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 24 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([\u001b[32m\"A\"\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"B\"\u001b[39m])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m   it(\u001b[32m\"records가 비어있으면 빈 배열 반환\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/08.test.js\u001b[39m\u001b[0m\u001b[2m:24:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mextractNames 테스트 › records가 비어있으면 빈 배열 반환\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 37 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 38 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m \u001b[36mawait\u001b[39m extractNames(\u001b[32m\"http://fakeurl.com\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 39 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 40 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 41 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 42 |\u001b[39m   it(\u001b[32m\"fetch 함수를 한 번만 호출\"\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/08.test.js\u001b[39m\u001b[0m\u001b[2m:39:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mextractNames 테스트 › fetch 함수를 한 번만 호출\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\n    Expected number of calls: \u001b[32m1\u001b[39m\n    Received number of calls: \u001b[31m0\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 46 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 47 |\u001b[39m     \u001b[36mawait\u001b[39m extractNames(\u001b[32m\"http://fakeurl.com\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 48 |\u001b[39m     expect(global\u001b[33m.\u001b[39mfetch)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                          \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 49 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 50 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 51 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toHaveBeenCalledTimes (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/08.test.js\u001b[39m\u001b[0m\u001b[2m:48:26)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["extractNames 테스트"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/08.test.js:6:55)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"extractNames 테스트 fetch 함수를 사용하는지 확인","status":"failed","title":"fetch 함수를 사용하는지 확인"},{"ancestorTitles":["extractNames 테스트"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[\"A\", \"B\"]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/08.test.js:24:20)"],"fullName":"extractNames 테스트 records 내부의 name 값을 배열로 반환","status":"failed","title":"records 내부의 name 값을 배열로 반환"},{"ancestorTitles":["extractNames 테스트"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/08.test.js:39:20)"],"fullName":"extractNames 테스트 records가 비어있으면 빈 배열 반환","status":"failed","title":"records가 비어있으면 빈 배열 반환"},{"ancestorTitles":["extractNames 테스트"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m1\u001b[39m\nReceived number of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledTimes (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/08.test.js:48:26)"],"fullName":"extractNames 테스트 fetch 함수를 한 번만 호출","status":"failed","title":"fetch 함수를 한 번만 호출"}]},{"numFailingTests":4,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1736755921448,"runtime":111,"slow":false,"start":1736755921337},"testFilePath":"/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/03.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mupdateTodoTitle 테스트 › map 메서드를 사용하는지 확인\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 4 |\u001b[39m describe(\u001b[32m\"updateTodoTitle 테스트\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 5 |\u001b[39m   it(\u001b[32m\"map 메서드를 사용하는지 확인\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 6 |\u001b[39m     expect(updateTodoTitle\u001b[33m.\u001b[39mtoString()\u001b[33m.\u001b[39mincludes(\u001b[32m\"map\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                        \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 9 |\u001b[39m   it(\u001b[32m\"특정 id의 title을 변경 후 새로운 배열을 반환\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/03.test.js\u001b[39m\u001b[0m\u001b[2m:6:56)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mupdateTodoTitle 테스트 › 특정 id의 title을 변경 후 새로운 배열을 반환\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '0')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m updateTodoTitle(todos\u001b[33m,\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"청소 완료\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 15 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBe(todos)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 16 |\u001b[39m     expect(result[\u001b[35m0\u001b[39m]\u001b[33m.\u001b[39mtitle)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"청소 완료\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m     expect(result[\u001b[35m1\u001b[39m]\u001b[33m.\u001b[39mtitle)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"운동하기\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/03.test.js\u001b[39m\u001b[0m\u001b[2m:16:18)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mupdateTodoTitle 테스트 › 존재하지 않는 id가 주어졌을 때 기존 배열을 그대로 반환\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[{\"completed\": false, \"id\": 1, \"title\": \"청소하기\"}, {\"completed\": false, \"id\": 2, \"title\": \"운동하기\"}]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 24 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m updateTodoTitle(todos\u001b[33m,\u001b[39m \u001b[35m999\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"없는 할 일\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 26 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual(todos)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 27 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m   it(\u001b[32m\"새로운 배열의 길이는 기존 배열과 같아야 함\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/03.test.js\u001b[39m\u001b[0m\u001b[2m:26:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mupdateTodoTitle 테스트 › 새로운 배열의 길이는 기존 배열과 같아야 함\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 33 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 34 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m updateTodoTitle(todos\u001b[33m,\u001b[39m \u001b[35m1\u001b[39m\u001b[33m,\u001b[39m \u001b[32m\"청소 완료\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 35 |\u001b[39m     expect(result\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(todos\u001b[33m.\u001b[39mlength)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 36 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 37 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 38 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.length (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/03.test.js\u001b[39m\u001b[0m\u001b[2m:35:19)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["updateTodoTitle 테스트"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/03.test.js:6:56)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"updateTodoTitle 테스트 map 메서드를 사용하는지 확인","status":"failed","title":"map 메서드를 사용하는지 확인"},{"ancestorTitles":["updateTodoTitle 테스트"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading '0')\n    at Object.<anonymous> (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/03.test.js:16:18)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"updateTodoTitle 테스트 특정 id의 title을 변경 후 새로운 배열을 반환","status":"failed","title":"특정 id의 title을 변경 후 새로운 배열을 반환"},{"ancestorTitles":["updateTodoTitle 테스트"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"completed\": false, \"id\": 1, \"title\": \"청소하기\"}, {\"completed\": false, \"id\": 2, \"title\": \"운동하기\"}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/03.test.js:26:20)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"updateTodoTitle 테스트 존재하지 않는 id가 주어졌을 때 기존 배열을 그대로 반환","status":"failed","title":"존재하지 않는 id가 주어졌을 때 기존 배열을 그대로 반환"},{"ancestorTitles":["updateTodoTitle 테스트"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'length')\n    at Object.length (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/03.test.js:35:19)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"updateTodoTitle 테스트 새로운 배열의 길이는 기존 배열과 같아야 함","status":"failed","title":"새로운 배열의 길이는 기존 배열과 같아야 함"}]},{"numFailingTests":4,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1736755921519,"runtime":69,"slow":false,"start":1736755921450},"testFilePath":"/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/04.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mdeleteTodo 테스트 › filter 메서드를 사용하는지 확인\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 4 |\u001b[39m describe(\u001b[32m\"deleteTodo 테스트\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 5 |\u001b[39m   it(\u001b[32m\"filter 메서드를 사용하는지 확인\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 6 |\u001b[39m     expect(deleteTodo\u001b[33m.\u001b[39mtoString()\u001b[33m.\u001b[39mincludes(\u001b[32m\"filter\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 9 |\u001b[39m   it(\u001b[32m\"특정 id의 todo를 제거하고 새로운 배열을 반환\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/04.test.js\u001b[39m\u001b[0m\u001b[2m:6:54)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mdeleteTodo 테스트 › 특정 id의 todo를 제거하고 새로운 배열을 반환\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[{\"completed\": true, \"id\": 2, \"title\": \"두 번째 할 일\"}]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 14 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m deleteTodo(todos\u001b[33m,\u001b[39m \u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 15 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBe(todos)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 16 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m       { id\u001b[33m:\u001b[39m \u001b[35m2\u001b[39m\u001b[33m,\u001b[39m title\u001b[33m:\u001b[39m \u001b[32m\"두 번째 할 일\"\u001b[39m\u001b[33m,\u001b[39m completed\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m     ])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 19 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/04.test.js\u001b[39m\u001b[0m\u001b[2m:16:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mdeleteTodo 테스트 › 존재하지 않는 id가 주어졌을 때 기존 배열을 그대로 반환\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[{\"completed\": false, \"id\": 1, \"title\": \"첫 번째 할 일\"}, {\"completed\": true, \"id\": 2, \"title\": \"두 번째 할 일\"}]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 25 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m deleteTodo(todos\u001b[33m,\u001b[39m \u001b[35m999\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 27 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual(todos)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 28 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 29 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 30 |\u001b[39m   it(\u001b[32m\"새로운 배열의 길이는 기존 배열보다 1 작아야 함\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/04.test.js\u001b[39m\u001b[0m\u001b[2m:27:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mdeleteTodo 테스트 › 새로운 배열의 길이는 기존 배열보다 1 작아야 함\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 34 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 35 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m deleteTodo(todos\u001b[33m,\u001b[39m \u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 36 |\u001b[39m     expect(result\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(todos\u001b[33m.\u001b[39mlength \u001b[33m-\u001b[39m \u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 37 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 38 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 39 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.length (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/04.test.js\u001b[39m\u001b[0m\u001b[2m:36:19)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["deleteTodo 테스트"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/04.test.js:6:54)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"deleteTodo 테스트 filter 메서드를 사용하는지 확인","status":"failed","title":"filter 메서드를 사용하는지 확인"},{"ancestorTitles":["deleteTodo 테스트"],"duration":1,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"completed\": true, \"id\": 2, \"title\": \"두 번째 할 일\"}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/04.test.js:16:20)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"deleteTodo 테스트 특정 id의 todo를 제거하고 새로운 배열을 반환","status":"failed","title":"특정 id의 todo를 제거하고 새로운 배열을 반환"},{"ancestorTitles":["deleteTodo 테스트"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"completed\": false, \"id\": 1, \"title\": \"첫 번째 할 일\"}, {\"completed\": true, \"id\": 2, \"title\": \"두 번째 할 일\"}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/04.test.js:27:20)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"deleteTodo 테스트 존재하지 않는 id가 주어졌을 때 기존 배열을 그대로 반환","status":"failed","title":"존재하지 않는 id가 주어졌을 때 기존 배열을 그대로 반환"},{"ancestorTitles":["deleteTodo 테스트"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'length')\n    at Object.length (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/04.test.js:36:19)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"deleteTodo 테스트 새로운 배열의 길이는 기존 배열보다 1 작아야 함","status":"failed","title":"새로운 배열의 길이는 기존 배열보다 1 작아야 함"}]},{"numFailingTests":2,"numPassingTests":1,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1736755921589,"runtime":68,"slow":false,"start":1736755921521},"testFilePath":"/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/02.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mcreateTodo 테스트 › 새로운 할 일을 기존 배열에 추가 후 반환\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m  9 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 10 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m createTodo(todos\u001b[33m,\u001b[39m \u001b[32m\"코드 작성\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 11 |\u001b[39m     expect(result\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(\u001b[35m3\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 12 |\u001b[39m     expect(result[\u001b[35m2\u001b[39m]\u001b[33m.\u001b[39mtitle)\u001b[33m.\u001b[39mtoBe(\u001b[32m\"코드 작성\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 13 |\u001b[39m     expect(result[\u001b[35m2\u001b[39m]\u001b[33m.\u001b[39mcompleted)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.length (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/02.test.js\u001b[39m\u001b[0m\u001b[2m:11:19)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mcreateTodo 테스트 › id가 고유한지 확인\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading '2')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 20 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 21 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m createTodo(todos\u001b[33m,\u001b[39m \u001b[32m\"코드 작성\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 22 |\u001b[39m     expect(result[\u001b[35m2\u001b[39m]\u001b[33m.\u001b[39mid)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBe(\u001b[35m1\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 23 |\u001b[39m     expect(result[\u001b[35m2\u001b[39m]\u001b[33m.\u001b[39mid)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoBe(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/02.test.js\u001b[39m\u001b[0m\u001b[2m:22:18)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["createTodo 테스트"],"duration":1,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'length')\n    at Object.length (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/02.test.js:11:19)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"createTodo 테스트 새로운 할 일을 기존 배열에 추가 후 반환","status":"failed","title":"새로운 할 일을 기존 배열에 추가 후 반환"},{"ancestorTitles":["createTodo 테스트"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading '2')\n    at Object.<anonymous> (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/02.test.js:22:18)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"createTodo 테스트 id가 고유한지 확인","status":"failed","title":"id가 고유한지 확인"},{"ancestorTitles":["createTodo 테스트"],"duration":1,"failureMessages":[],"fullName":"createTodo 테스트 기존 배열을 변경하지 않고 새로운 배열을 반환","status":"passed","title":"기존 배열을 변경하지 않고 새로운 배열을 반환"}]},{"numFailingTests":4,"numPassingTests":0,"numPendingTests":0,"numTodoTests":0,"perfStats":{"end":1736755921660,"runtime":68,"slow":false,"start":1736755921592},"testFilePath":"/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/06.test.js","failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mtransformUsers 테스트 › map 메서드를 사용하는지 확인\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\n    Expected: \u001b[32mtrue\u001b[39m\n    Received: \u001b[31mfalse\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 4 |\u001b[39m describe(\u001b[32m\"transformUsers 테스트\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 5 |\u001b[39m   it(\u001b[32m\"map 메서드를 사용하는지 확인\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 6 |\u001b[39m     expect(transformUsers\u001b[33m.\u001b[39mtoString()\u001b[33m.\u001b[39mincludes(\u001b[32m\"map\"\u001b[39m))\u001b[33m.\u001b[39mtoBe(\u001b[36mtrue\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m   |\u001b[39m                                                       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 7 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 8 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 9 |\u001b[39m   it(\u001b[32m\"fullName과 isAdult를 올바르게 변환\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBe (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/06.test.js\u001b[39m\u001b[0m\u001b[2m:6:55)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mtransformUsers 테스트 › fullName과 isAdult를 올바르게 변환\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[{\"fullName\": \"Alice Lee\", \"isAdult\": true}, {\"fullName\": \"Bob Kim\", \"isAdult\": false}]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 13 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 14 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m transformUsers(users)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 15 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 16 |\u001b[39m       { fullName\u001b[33m:\u001b[39m \u001b[32m\"Alice Lee\"\u001b[39m\u001b[33m,\u001b[39m isAdult\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 17 |\u001b[39m       { fullName\u001b[33m:\u001b[39m \u001b[32m\"Bob Kim\"\u001b[39m\u001b[33m,\u001b[39m isAdult\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m }\u001b[33m,\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 18 |\u001b[39m     ])\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/06.test.js\u001b[39m\u001b[0m\u001b[2m:15:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mtransformUsers 테스트 › 빈 배열이 주어졌을 때 빈 배열 반환\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\n    Expected: \u001b[32m[]\u001b[39m\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 21 |\u001b[39m   it(\u001b[32m\"빈 배열이 주어졌을 때 빈 배열 반환\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 22 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m transformUsers([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 23 |\u001b[39m     expect(result)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 24 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 25 |\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 26 |\u001b[39m   it(\u001b[32m\"새로운 배열의 길이는 기존 배열과 같아야 함\"\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toEqual (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/06.test.js\u001b[39m\u001b[0m\u001b[2m:23:20)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mtransformUsers 테스트 › 새로운 배열의 길이는 기존 배열과 같아야 함\u001b[39m\u001b[22m\n\n    TypeError: Cannot read properties of undefined (reading 'length')\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 30 |\u001b[39m     ]\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 31 |\u001b[39m     \u001b[36mconst\u001b[39m result \u001b[33m=\u001b[39m transformUsers(users)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 32 |\u001b[39m     expect(result\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBe(users\u001b[33m.\u001b[39mlength)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m    |\u001b[39m                   \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 33 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 34 |\u001b[39m })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 35 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.length (\u001b[22m\u001b[2m\u001b[0m\u001b[36m__test__/06.test.js\u001b[39m\u001b[0m\u001b[2m:32:19)\u001b[22m\u001b[2m\u001b[22m\n","testResults":[{"ancestorTitles":["transformUsers 테스트"],"duration":2,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32mtrue\u001b[39m\nReceived: \u001b[31mfalse\u001b[39m\n    at Object.toBe (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/06.test.js:6:55)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"transformUsers 테스트 map 메서드를 사용하는지 확인","status":"failed","title":"map 메서드를 사용하는지 확인"},{"ancestorTitles":["transformUsers 테스트"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[{\"fullName\": \"Alice Lee\", \"isAdult\": true}, {\"fullName\": \"Bob Kim\", \"isAdult\": false}]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/06.test.js:15:20)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"transformUsers 테스트 fullName과 isAdult를 올바르게 변환","status":"failed","title":"fullName과 isAdult를 올바르게 변환"},{"ancestorTitles":["transformUsers 테스트"],"duration":0,"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoEqual\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // deep equality\u001b[22m\n\nExpected: \u001b[32m[]\u001b[39m\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toEqual (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/06.test.js:23:20)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"transformUsers 테스트 빈 배열이 주어졌을 때 빈 배열 반환","status":"failed","title":"빈 배열이 주어졌을 때 빈 배열 반환"},{"ancestorTitles":["transformUsers 테스트"],"duration":0,"failureMessages":["TypeError: Cannot read properties of undefined (reading 'length')\n    at Object.length (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/__test__/06.test.js:32:19)\n    at Promise.then.completed (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:316:40)\n    at _runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-runner/build/runTest.js:444:34)"],"fullName":"transformUsers 테스트 새로운 배열의 길이는 기존 배열과 같아야 함","status":"failed","title":"새로운 배열의 길이는 기존 배열과 같아야 함"}]}],"config":{"bail":0,"changedFilesWithAncestor":false,"ci":false,"collectCoverage":false,"collectCoverageFrom":[],"coverageDirectory":"/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/coverage","coverageProvider":"babel","coverageReporters":["json","text","lcov","clover"],"detectLeaks":false,"detectOpenHandles":false,"errorOnDeprecated":false,"expand":false,"findRelatedTests":false,"forceExit":false,"json":false,"lastCommit":false,"listTests":false,"logHeapUsage":false,"maxConcurrency":5,"maxWorkers":7,"noStackTrace":false,"nonFlagArgs":[],"notify":false,"notifyMode":"failure-change","onlyChanged":false,"onlyFailures":false,"openHandlesTimeout":1000,"passWithNoTests":false,"projects":[],"reporters":[["default",{}],["/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/jest-html-reporters/index.js",{"pageTitle":"문제 은행 테스트 결과","outputPath":"./test-report.html","publicPath":"./","filename":"test-report.html","expand":false,"hideIcon":true,"openReport":false}]],"rootDir":"/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04","runTestsByPath":false,"seed":408115266,"skipFilter":false,"snapshotFormat":{"escapeString":false,"printBasicPrototype":false},"testFailureExitCode":1,"testPathPattern":"","testSequencer":"/Users/miiing_gaeng/Desktop/내배캠/JS학습/달리기반/JS_Study-04/node_modules/@jest/test-sequencer/build/index.js","updateSnapshot":"new","useStderr":false,"watch":false,"watchAll":false,"watchman":true,"workerThreads":false},"endTime":1736755921664,"_reporterOptions":{"publicPath":"./","filename":"test-report.html","expand":false,"pageTitle":"문제 은행 테스트 결과","hideIcon":true,"testCommand":"","openReport":false,"failureMessageOnly":0,"enableMergeData":false,"dataMergeLevel":1,"inlineSource":false,"urlForTestFiles":"","darkTheme":false,"includeConsoleLog":false,"stripSkippedTest":false,"outputPath":"./test-report.html"},"logInfoMapping":{},"attachInfos":{}})